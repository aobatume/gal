## CALCULATE FISHERIES GOAL - GALICIA + RAM LEGACY ##
library(dplyr)
library(readr)
library(stringr)
library(ramlegacy)

# ---- Load Data ----

ICES_DATA <- read_csv("/Users/batume/Documents/R/GAL_git/prep/FIS/ices_taxonomy_enriched.csv")


# Load RAM Legacy database
ram_data <- tryCatch({
  load_ramlegacy()
}, error = function(e) {
  cat("Error loading RAM data:", e$message, "\n")
  NULL
})
if (is.null(ram_data)) stop("Failed to load RAM data.")

# ---- Merge RAM + ASFIS ----

bbmsy_data <- ram_data$timeseries_values_views %>%
  filter(!is.na(BdivBmsypref)) %>%
  select(stockid, year, bbmsy = BdivBmsypref) %>%
  left_join(ram_data$stock %>% select(stockid, scientificname), by = "stockid") %>%
  mutate(scientificname = str_to_lower(scientificname)) %>%
  left_join(asfis, by = "scientificname") %>%
  filter(!is.na(FAOcode)) %>%
  mutate(FAOcode = str_to_upper(FAOcode))

# ---- Match to ICES Data ----

ices_fao_codes <- unique(ICES_DATA$FAOcode)
matched_fao <- unique(bbmsy_data$FAOcode)
unmatched_fao <- setdiff(ices_fao_codes, matched_fao)

# Summary
cat("Matched FAO codes:", length(matched_fao), "\n")
cat("Unmatched FAO codes:", length(unmatched_fao), "\n")

# Optional: Unmatched subset for CMSY prep
subset_unmatched <- ICES_DATA %>%
  filter(FAOcode %in% unmatched_fao)

# ---- Calculate % of Galicia fisheries covered ----

# Simulated pesca_tax_final (replace this with actual loaded data)
# pesca_tax_final <- read_csv("path_to_pesca_tax_final.csv")

# Clean names
bbmsy_species <- unique(bbmsy_data$scientificname)
pesca_tax_final <- pesca_tax_final %>%
  mutate(scientificname_clean = str_to_lower(str_trim(scientificname)))

# Calculate total and matched sales
total_sales <- sum(pesca_tax_final$total_euros, na.rm = TRUE)
covered_sales <- pesca_tax_final %>%
  filter(scientificname_clean %in% bbmsy_species) %>%
  summarise(covered_euros = sum(total_euros, na.rm = TRUE)) %>%
  pull(covered_euros)

percentage_covered <- (covered_sales / total_sales) * 100

cat("âœ… Percentage of total sales covered by bbmsy species:", round(percentage_covered, 2), "%\n")

# ---- Optional Debug Info ----
# glimpse(bbmsy_data)
# head(unmatched_fao)
# head(subset_unmatched)