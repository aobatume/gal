# Load necessary libraries
library(dplyr)
library(tidyr)
library(rfishbase)
library(datalimited)

ICES_FULL_CMSY <- ICES_DATA %>%
  # Join the resilience_score_final from the filtered species data
  left_join(
    ICES_species_filtered %>%
      select(scientificname, resilience_score_final) %>%
      distinct(), 
    by = "scientificname"
  ) %>%
  # If you want, you can rename the column for clarity
  rename(resilience = resilience_score_final)

ICES_FULL_CMSY<-ICES_FULL_CMSY %>% rename(resilience_score_final=resilience)
filter(scientificname %in% ICES_species_filtered)
ICES_species_filtered<-ICES_species_filtered %>% rename(resilience_score_final=resilience)


# Prepare CMSY input data
cmsy_input <- ICES_FULL_CMSY %>%
  # Filter species present in ICES_species_filtered (use the column vector!)
  filter(scientificname %in% ICES_species_filtered$scientificname) %>%
  group_by(scientificname, Year) %>%
  summarise(ct = sum(Catch, na.rm = TRUE), .groups = "drop") %>%
  # Join resilience_score_final from ICES_FULL_CMSY to the grouped data
  left_join(
    ICES_FULL_CMSY %>%
      select(scientificname, resilience_score_final) %>%
      distinct(),
    by = "scientificname"
  ) %>%
  rename(
    stock = scientificname,
    yr = Year,
    resilience = resilience_score_final
  ) %>%
  select(stock, yr, ct, resilience) %>%
  filter(ct > 0)

unique(cmsy_input$stock)





cmsy_input %>% 
  group_by(stock) %>% 
  summarise(n_years = n_distinct(yr)) %>% 
  filter(n_years < 2)


cmsy_input %>%
  group_by(stock) %>%
  summarise(
    n_resilience = n_distinct(resilience),
    any_na_resilience = any(is.na(resilience)),
    resilience_values = paste(unique(resilience), collapse = ", ")
  ) %>%
  filter(n_resilience > 1 | any_na_resilience)



cmsy_input %>% filter(stock == "Beryx decadactylus") %>% print(n = Inf)

unique(cmsy_input$resilience)
class(cmsy_input$resilience)




# Function to run CMSY model
run_cmsy <- function(stock_data) {
  tryCatch({
    # Extract vectors for CMSY
    ct <- stock_data$ct
    yr <- stock_data$yr
    res <- unique(stock_data$resilience)
    
    # Run CMSY model
    cmsy(
      ct = ct,
      yr = yr,
      start_r = res,  # Already numeric
      reps = 20000
    )
  }, error = function(e) {
    message("Error for ", unique(stock_data$stock), ": ", e$message)
    return(NULL)
  })
}

# Run CMSY for all species
cmsy_results <- cmsy_input %>%
  group_by(stock) %>%
  group_modify(~{
    res <- run_cmsy(.x)
    if (!is.null(res)) {
      biomass <- res$biomass %>%
        as.data.frame() %>%
        mutate(yr = .x$yr) %>%
        select(yr, bbmsy = bbmsy_q50)
      return(biomass)
    } else {
      return(data.frame())
    }
  })

# Combine CMSY and RAM data
final_bbmsy <- bind_rows(
  # Existing RAM data
  bbmsy_data %>%
    select(stock = scientificname, yr = year, bbmsy),
  
  # New CMSY results
  cmsy_results %>%
    mutate(bbmsy = as.numeric(bbmsy))
) %>%
  arrange(stock, yr)