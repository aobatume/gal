library(zoo)
library(ramlegacy)
# ------------------ Step 1: Load RAM Legacy Data ------------------
ram_data <- tryCatch({
load_ramlegacy()
}, error = function(e) {
stop("Error loading RAM data: ", e$message)
})
# ------------------ Step 2: Filter Galicia Stocks ------------------
galicia_stocks <- ram_data$stock %>%
filter(grepl("Northeast Atlantic", region, ignore.case = TRUE) |
grepl("Spain", areaid, ignore.case = TRUE) |
grepl("ICES", areaid, ignore.case = TRUE)) %>%
select(stockid, areaid, stocklong, scientificname, commonname) %>%
distinct()
# Tag ICES Groups
galicia_stocks <- galicia_stocks %>%
mutate(group = case_when(
grepl("VIIIc|IXa", areaid) ~ 1,
grepl("VIIIa|VIIIb|VIIId|VIIIe|IXb", areaid) ~ 2,
grepl("VII", areaid) ~ 3,
TRUE ~ 4
))
# ------------------ Step 3: Time Series Data ------------------
galicia_timeseries <- ram_data$timeseries_values_views %>%
filter(stockid %in% galicia_stocks$stockid) %>%
select(stockid, year, TCbest, TBbest, TBdivTBmsy)
# ------------------ Step 4: Combine Stock and Time Series ------------------
galicia_data <- galicia_timeseries %>%
left_join(galicia_stocks, by = "stockid")
# ------------------ Step 5: Get Taxonomy via WoRMS ------------------
get_worms_taxonomy <- function(species_name) {
res <- wm_records_name(name = species_name)
if (length(res) == 0 || (is.data.frame(res) && nrow(res) == 0)) return(tibble())
entry <- if (is.data.frame(res)) res[1, ] else res[[1]]
tibble(
scientificname = entry$scientificname,
kingdom = entry$kingdom,
phylum = entry$phylum,
class = entry$class,
order = entry$order,
family = entry$family,
genus = entry$genus,
AphiaID = entry$AphiaID
)
}
file_path <- "/Users/batume/Documents/R/GAL_git/prep/FIS/taxonomy_df.rds"
species_list <- unique(galicia_data$scientificname)
taxonomy_df <- if (file.exists(file_path)) {
readRDS(file_path)
} else {
safe_lookup <- possibly(get_worms_taxonomy, otherwise = tibble())
taxonomy_list <- map(species_list, ~{ Sys.sleep(1); safe_lookup(.x) })
taxonomy_df <- bind_rows(taxonomy_list)
saveRDS(taxonomy_df, file = file_path)
taxonomy_df
}
galicia_data <- galicia_data %>%
left_join(taxonomy_df, by = "scientificname")
# ------------------ Step 6: Get Resilience from FishBase ------------------
species_data <- species(species_list, fields = c("Species", "Vulnerability", "LongevityWild", "Length")) %>%
rename(scientificname = Species) %>%
mutate(resilience_score = case_when(
Vulnerability <= 20 ~ 0.8,
Vulnerability <= 40 ~ 0.6,
Vulnerability <= 60 ~ 0.4,
TRUE ~ 0.2
))
galicia_data <- galicia_data %>%
left_join(species_data, by = "scientificname")
# ------------------ Step 7: Catch Adjustments + Smoothing ------------------
galicia_data <- galicia_data %>%
mutate(
TCbest = ifelse(is.na(TCbest), 0, TCbest),
TBbest = ifelse(is.na(TBbest), 0, TBbest),
adjusted_catch = TCbest * resilience_score
) %>%
group_by(stockid) %>%
arrange(year) %>%
mutate(
smoothed_catch = rollapply(adjusted_catch, width = 3, FUN = mean, align = "right", fill = NA, na.rm = TRUE)
) %>%
ungroup()
# ------------------ Step 8: Calculate Status (TB / TBmsy = B / BMSY)  Status is the biomass relative to the biomass at MSY, capped at 1
galicia_data <- galicia_data %>%
mutate(
status = ifelse(!is.na(TBdivTBmsy), pmin(TBdivTBmsy, 1), NA_real_)
)
# ------------------ Step 9: Calculate Trend (Slope over Last 5 Years) ------------------
trend_data <- galicia_data %>%
filter(!is.na(smoothed_catch)) %>%
group_by(stockid) %>%
arrange(year) %>%
filter(n() >= 5) %>%
summarise(
trend = {
df <- tail(cur_data(), 5)
if (nrow(df) < 5 || all(is.na(df$smoothed_catch))) NA_real_
else lm(smoothed_catch ~ year, data = df)$coefficients[["year"]]
},
.groups = "drop"
)
galicia_data <- galicia_data %>%
left_join(trend_data, by = "stockid")
# ------------------ Step 10: Export Species List and Final Data ------------------
species_list_out <- galicia_data %>%
distinct(scientificname, commonname, family, genus, order, class, phylum) %>%
arrange(scientificname)
write_csv(species_list_out, "galicia_species_list.csv")
write_csv(galicia_data, "galicia_fisheries_enriched.csv")
# ------------------ Step 1: Top Species Sold in Galicia ------------------
top_pesca_species <- pesca_Tax_final %>%
group_by(Species) %>%
summarise(
total_weight = sum(Weight_tons, na.rm = TRUE),
total_value = sum(Value_euros, na.rm = TRUE)
) %>%
arrange(desc(total_weight)) %>%
mutate(Species_clean = str_to_lower(Species))  # prepare for matching
colnames(pesca_tax_final)
colnames(ices_tax_final_filled)
colnames(galicia_data)
View(asfis)
head(asfis)
asfis_raw <- read.csv("/Users/batume/Documents/R/GAL_git/prep/FIS/ASFIS_sp_2024.csv", encoding = "Latin1")
colnames(asfis_raw)
asfis <- read.csv("/Users/batume/Documents/R/GAL_git/prep/FIS/ASFIS_sp_2024.csv", encoding = "Latin1") %>%
select(
FAOcode = Alpha3_Code,
scientificname = Scientific_Name,
English_name = English_name,
Family, Order.or.higher.taxa
)
head(asfis)
merged_data <- galicia_data %>%
left_join(asfis, by = "FAOcode")
merged_data <- galicia_data %>%
left_join(asfis, by = "scientificname")
View(merged_data)
galicia_ram_taxo <- galicia_data %>%
left_join(asfis, by = "scientificname")
asfis <- read.csv("/Users/batume/Documents/R/GAL_git/prep/FIS/ASFIS_sp_2024.csv", encoding = "Latin1") %>%
select(
FAOcode = Alpha3_Code,
Scientific_name = Scientific_Name,
English_name = English_name,
Family, Order.or.higher.taxa
)
# Step 2: Merge ASFIS with ICES catch data
merged_data <- filtered_ices_stocks %>%
left_join(asfis, by = "FAOcode") %>%
rename(scientificname = Scientific_name)
print(unresolved_final2)
count(unique(galicia_ram_taxo$FAOcode))
unique(galicia_ram_taxo$FAOcode)
table(unique(galicia_ram_taxo$FAOcode))
ey<-(unique(galicia_ram_taxo$FAOcode))
galicia_ram_taxo %>% filter(FAOcode = NA)
galicia_ram_taxo %>% filter(scientificname = NA)
galicia_ram_taxo %>% filter(smoothed_catch = NA)
galicia_ram_taxo %>% filter(is.na(scientificname))
ey<-galicia_ram_taxo %>% filter(is.na(scientificname))
ey
ey<-galicia_ram_taxo %>% filter(is.na(smoothed_catch))
ey
ey<-(unique(ices_tax_final_filled$FAOcode))
ices_tax_final_filled %>% filter(is.na(scientificname))
ices_tax_final_filled %>% filter(is.na(FAOcode))
ey<-(unique(pesca_tax_final$FAOcode))
pesca_tax_final %>% filter(is.na(FAOcode))
ey<-(unique(pesca_tax_final$FAOcode))
ey<-(unique(pesca_tax_final$scientificname))
ey<-(unique(ices_tax_final_filled$scientificname))
ey<-(unique(ices_tax_final_filled$FAOcode))
ey<-(unique(galicia_ram_taxo$FAOcode))
galicia_ram_taxo %>% filter(is.na(FAOcode))
ey<-(unique(galicia_ram_taxo$scientificname))
71galicia_ram_taxo %>% filter(is.na(scientificname))
galicia_ram_taxo %>% filter(is.na(scientificname))
# ------------------ Step 1: Top Species Sold in Galicia ------------------
top_pesca_species <- pesca_tax_final %>%
group_by(Species) %>%
summarise(
total_weight = sum(Weight_tons, na.rm = TRUE),
total_value = sum(Value_euros, na.rm = TRUE)
) %>%
arrange(desc(total_weight)) %>%
mutate(Species_clean = str_to_lower(Species))  # prepare for matching
# ------------------ Step 1: Top FAOcode Sold in Galicia ------------------
top_pesca_FAOcode <- pesca_tax_final %>%
group_by(FAOcode) %>%
summarise(
total_weight = sum(Weight_tons, na.rm = TRUE),
total_value = sum(Value_euros, na.rm = TRUE)
) %>%
arrange(desc(total_weight)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))  # prepare for matching
colnames(pesca_tax_final)
colnames(ices_tax_final_filled)
colnames(galicia_data)
# ------------------ Step 1: Top FAOcode Sold in Galicia ------------------
top_pesca_FAOcode <- pesca_tax_final %>%
group_by(FAOcode) %>%
summarise(
total_weight = sum(catch_tonnes, na.rm = TRUE),
total_value = sum(total_euros, na.rm = TRUE)
) %>%
arrange(desc(total_weight)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))  # prepare for matching
# ------------------ Step 2: ICES FAOcode in 8.c / 9.a ------------------
ices_FAOcode <- ices_tax_final_fixed %>%
filter(Area %in% c("8.c", "9.a")) %>%
group_by(FAOcode) %>%
summarise(total_catch = sum(Catch_tons, na.rm = TRUE)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))
# ------------------ Step 2: ICES FAOcode in 8.c / 9.a ------------------
ices_FAOcode <- ices_tax_final_fixed %>%
filter(Area %in% c("8.c", "9.a")) %>%
group_by(FAOcode) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))
# ------------------ Step 3: RAM Legacy FAOcode (with status info) ------------------
ram_FAOcode <- galicia_ram_taxo %>%
distinct(scientificname, commonname, status) %>%
filter(!is.na(status)) %>%
mutate(FAOcode_clean = str_to_lower(scientificname))
# ------------------ Step 4: Merge All ------------------
unified_FAOcode <- top_pesca_FAOcode %>%
full_join(ices_FAOcode, by = "FAOcode_clean") %>%
full_join(ram_FAOcode, by = "FAOcode_clean") %>%
select(FAOcode_clean, total_weight, total_value, total_catch, scientificname, commonname, status)
# Optional: add classification if you want
unified_FAOcode <- unified_FAOcode %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# View FAOcode intersecting all 3 datasets
unified_FAOcode %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
View(ices_tax_final_fixed)
# ------------------ Step 2: ICES FAOcode in 8.c / 9.a ------------------
ices_FAOcode <- ices_tax_final_fixed %>%
filter(Area %in% c("27.8.c", "27.9.a")) %>%
group_by(FAOcode) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))
# ------------------ Step 3: RAM Legacy FAOcode (with status info) ------------------
ram_FAOcode <- galicia_ram_taxo %>%
distinct(scientificname, commonname, status) %>%
filter(!is.na(status)) %>%
mutate(FAOcode_clean = str_to_lower(scientificname))
# ------------------ Step 4: Merge All ------------------
unified_FAOcode <- top_pesca_FAOcode %>%
full_join(ices_FAOcode, by = "FAOcode_clean") %>%
full_join(ram_FAOcode, by = "FAOcode_clean") %>%
select(FAOcode_clean, total_weight, total_value, total_catch, scientificname, commonname, status)
# Optional: add classification if you want
unified_FAOcode <- unified_FAOcode %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# ------------------ Step 5: Export or Preview ------------------
write_csv(unified_FAOcode, "unified_FAOcode_list.csv")
# View FAOcode intersecting all 3 datasets
unified_FAOcode %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
View(unified_FAOcode)
head(unified_FAOcode)
tail(unified_FAOcode)
ram_FAOcode
galicia_ram_taxo
galicia_ram_taxo <- galicia_data %>%
left_join(asfis, by = "scientificname")
galicia_ram_taxo <- galicia_data %>%
left_join(asfis, by = "scientificname")
galicia_ram_taxo <- galicia_data %>%
left_join(asfis, by = "FAOcode")
colnames(asfis)
galicia_ram_taxo <- galicia_data %>%
left_join(asfis, by = c("scientificname" = "Scientific_name"))
# ------------------ Step 3: RAM Legacy FAOcode (with status info) ------------------
ram_FAOcode <- galicia_ram_taxo %>%
distinct(scientificname, commonname, status) %>%
filter(!is.na(status)) %>%
mutate(FAOcode_clean = str_to_lower(scientificname))
# ------------------ Step 4: Merge All ------------------
unified_FAOcode <- top_pesca_FAOcode %>%
full_join(ices_FAOcode, by = "FAOcode_clean") %>%
full_join(ram_FAOcode, by = "FAOcode_clean") %>%
select(FAOcode_clean, total_weight, total_value, total_catch, scientificname, commonname, status)
# Optional: add classification if you want
unified_FAOcode <- unified_FAOcode %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# View FAOcode intersecting all 3 datasets
unified_FAOcode %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
tail(unified_FAOcode)
View(unified_FAOcode)
head(pesca_tax_final)
head(ices_tax_final_filled)
head(galicia_data)
head(pesca_tax_final)
head(ices_tax_final_filled)
head(galicia_ram_taxo)
View(galicia_ram_taxo)
top_pesca_FAOcode <- pesca_tax_final %>%
group_by(FAOcode) %>%
summarise(
total_weight = sum(catch_tonnes, na.rm = TRUE),
total_value = sum(total_euros, na.rm = TRUE)
) %>%
arrange(desc(total_weight)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))  # prepare for matching
ices_FAOcode <- ices_tax_final_fixed %>%
filter(Area %in% c("27.8.c", "27.9.a")) %>%
group_by(FAOcode) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE)) %>%
mutate(FAOcode_clean = str_to_lower(FAOcode))
# ------------------ Step 3: RAM Legacy FAOcode (with status info) ------------------
ram_FAOcode <- galicia_ram_taxo %>%
distinct(scientificname, commonname, status) %>%
filter(!is.na(status)) %>%
mutate(FAOcode_clean = str_to_lower(scientificname))
# ------------------ Step 4: Merge All ------------------
unified_FAOcode <- top_pesca_FAOcode %>%
full_join(ices_FAOcode, by = "FAOcode_clean") %>%
full_join(ram_FAOcode, by = "FAOcode_clean") %>%
select(FAOcode_clean, total_weight, total_value, total_catch, scientificname, commonname, status)
# Optional: add classification if you want
unified_FAOcode <- unified_FAOcode %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# ------------------ Step 5: Export or Preview ------------------
write_csv(unified_FAOcode, "unified_FAOcode_list.csv")
# View FAOcode intersecting all 3 datasets
unified_FAOcode %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
tail(unified_FAOcode)
pesca_by_species <- pesca_tax_final %>%
group_by(scientificname) %>%
summarise(
total_weight = sum(total_kg, na.rm = TRUE) / 1000,  # convert to tonnes
total_value = sum(total_euros, na.rm = TRUE)
)
# ------------------ STEP 2: ICES by scientificname in 8.c / 9.a ------------------
ices_by_species <- ices_tax_final_fixed %>%
filter(Area %in% c("27.8.c", "27.9.a")) %>%
group_by(scientificname) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE))
# ------------------ STEP 3: RAM (status only if available) ------------------
ram_by_species <- galicia_data %>%
filter(!is.na(status)) %>%
group_by(scientificname, commonname) %>%
summarise(status = mean(status, na.rm = TRUE), .groups = "drop")
# ------------------ STEP 4: Merge by scientificname ------------------
unified_species <- pesca_by_species %>%
full_join(ices_by_species, by = "scientificname") %>%
full_join(ram_by_species, by = "scientificname") %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# ------------------ STEP 5: View species in all 3 sources ------------------
unified_species %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
View(unified_species)
# ------------------ STEP 3: RAM ------------------
ram_by_species <- galicia_data %>%
group_by(scientificname, commonname) %>%
summarise(status = mean(status, na.rm = TRUE), .groups = "drop")
# ------------------ STEP 4: Merge by scientificname ------------------
unified_species <- pesca_by_species %>%
full_join(ices_by_species, by = "scientificname") %>%
full_join(ram_by_species, by = "scientificname") %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# ------------------ STEP 1: Prepare Pesca (group by scientificname) ------------------
pesca_by_species <- pesca_tax_final %>%
group_by(scientificname) %>%
summarise(
total_weight = sum(total_kg, na.rm = TRUE) / 1000,  # convert to tonnes
total_value = sum(total_euros, na.rm = TRUE)
)
# ------------------ STEP 2: ICES by scientificname in 8.c / 9.a ------------------
ices_by_species <- ices_tax_final_fixed %>%
filter(Area %in% c("27.8.c", "27.9.a")) %>%
group_by(scientificname) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE))
# ------------------ STEP 3: RAM ------------------
ram_by_species <- galicia_data %>%
group_by(scientificname, commonname) %>%
summarise(status = mean(status, na.rm = TRUE), .groups = "drop")
# ------------------ STEP 4: Merge by scientificname ------------------
unified_species <- pesca_by_species %>%
full_join(ices_by_species, by = "FAOcode") %>%
full_join(ram_by_species, by = "FAOcode") %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
ram_by_species
# ------------------ STEP 1: Prepare Pesca (group by scientificname) ------------------
pesca_by_species <- pesca_tax_final %>%
group_by(FAOcode) %>%
summarise(
total_weight = sum(total_kg, na.rm = TRUE) / 1000,  # convert to tonnes
total_value = sum(total_euros, na.rm = TRUE)
)
# ------------------ STEP 2: ICES by scientificname in 8.c / 9.a ------------------
ices_by_species <- ices_tax_final_fixed %>%
filter(Area %in% c("27.8.c", "27.9.a")) %>%
group_by(FAOcode) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE))
# ------------------ STEP 3: RAM ------------------
ram_by_species <- galicia_data %>%
group_by(FAOcode, scientificname) %>%
summarise(status = mean(status, na.rm = TRUE), .groups = "drop")
# ------------------ STEP 3: RAM ------------------
ram_by_species <- galicia_ram_taxo %>%
group_by(FAOcode, scientificname) %>%
summarise(status = mean(status, na.rm = TRUE), .groups = "drop")
# ------------------ STEP 4: Merge by scientificname ------------------
unified_species <- pesca_by_species %>%
full_join(ices_by_species, by = "FAOcode") %>%
full_join(ram_by_species, by = "FAOcode") %>%
mutate(
in_pesca = !is.na(total_weight),
in_ices = !is.na(total_catch),
in_ram = !is.na(status)
)
# ------------------ STEP 5: View species in all 3 sources ------------------
unified_species %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
View(unified_species)
View(total_summary_PESCA)
View(pesca_tax_final)
duplicated(pesca_tax_final)
table(duplicated(pesca_tax_final))
table(duplicated(pesca_galicia_clean))
ty<- pesca_tax_final %>% filter(duplicated(pesca_galicia_clean))
unified_species
# ------------------ STEP 5: View species in all 3 sources ------------------
unified_species %>%
filter(in_pesca & in_ices & in_ram) %>%
arrange(desc(total_weight)) %>%
print(n = 20)
head(pesca_tax_final)
head(ices_tax_final_filled)
head(galicia_ram_taxo)
# ------------------ STEP 1: Prepare Pesca (group by scientificname) ------------------
pesca_by_species <- pesca_tax_final %>%
group_by(FAOcode) %>%
summarise(
total_weight = sum(total_kg, na.rm = TRUE) / 1000,  # convert to tonnes
total_value = sum(total_euros, na.rm = TRUE)
)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
library(readr)
library(worrms)
library(rfishbase)
library(zoo)
library(ramlegacy)
pesca_by_species <- pesca_tax_final %>%
group_by(FAOcode) %>%
summarise(
total_weight = sum(total_kg, na.rm = TRUE) / 1000,  # convert to tonnes
total_value = sum(total_euros, na.rm = TRUE)
)
# ------------------ STEP 2: ICES by scientificname in 8.c / 9.a ------------------
ices_by_species <- ices_tax_final_fixed %>%
filter(Area %in% c("27.8.c", "27.9.a")) %>%
group_by(FAOcode) %>%
summarise(total_catch = sum(Catch, na.rm = TRUE))
table(duplicated(pesca_tax_final))
table(duplicated(pesca_galicia_clean))
ty
ty<- pesca_tax_final %>% filter(duplicated(pesca_galicia_clean))
View(missing_fixes)
library(dplyr)
LS
ls
